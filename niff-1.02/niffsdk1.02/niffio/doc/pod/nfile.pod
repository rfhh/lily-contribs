
=head1 NAME

nfile - NIFFIOFile routines

=head1 SYNOPSIS

=over 4

=item *

NIFFIOFileNew()

=item *

NIFFIOFileNewSTDC()

=item *

NIFFIOFileInit()

=item *

NIFFIOFileDelete()

=item *

NIFFIOFileGetCLT()

=item *

NIFFIOFileReadCLT()

=item *

NIFFIOFileAdoptCLT()

=item *

NIFFIOSeekChunkTags()

=back

=head1 NIFFIOFileNew

Return a pointer to a new NIFFIOFile, or null on failure.

     NIFFIOFile *
     NIFFIOFileNew(void)


=head2 OBLIGATIONS

=over 4

=item *

Don't forget to call NIFFIOFileInit() for your new file.

=item *

You must eventually call NIFFIOFileDelete() to free the NIFFIOFile.

=back

=head1 NIFFIOFileNewSTDC

Create a new NIFFIOFile given a Standard C Library FILE pointer

     NIFFIOFile *
     NIFFIOFileNewSTDC(FILE *fp)


=head2 OBLIGATIONS

You must call NIFFIOFileDelete() to free the new NIFFIOFile.

=head1 NIFFIOFileInit

Provide a NIFFIOFile with a user-defined file and I/O callbacks.

     RIFFIOSuccess
     NIFFIOFileInit(NIFFIOFile *pnf,
                    void *pvUserFile,
                    RIFFIOReader reader,
                    RIFFIOWriter writer,
                    RIFFIOSeeker seeker,
                    RIFFIOTeller teller)


=head2 ENTRY

=over 4

=item *<pnf>

is the NIFFIOFile being initialized.

=item *<pvUserFile>

is a user representation of a file that will be passed to
user-defined reader, writer, seeker, and teller functions.

=item *<reader>,<writer>,<seeker>,<teller>

are user-defined functions that perform operations on <pvUserFile>

=back

=head2 OBLIGATIONS

NIFFFIOFileInit() should be called immediately after NIFFIOFileNew()

=head1 NIFFIOFileDelete

Free the memory associated with a NIFFIOFile.

     void
     NIFFIOFileDelete(NIFFIOFile *pnf)


=head2 WARNING

This also frees the memory of any NIFFIOChunkLengthTable
that may have been associated with the NIFFIOFile
using NIFFIOFileAdoptCLT().

=head1 NIFFIOFileGetCLT

Return a pointer to a NIFFIOFile's chunk length table.

     NIFFIOChunkLengthTable *
     NIFFIOFileGetCLT(NIFFIOFile *pnf)


=head2 RETURN

null if the chunk length table has not be set or read yet.

=head2 OBLIGATIONS

This pointer may become invalid after calls to
other NIFFIO routines.  Such as what ?????

=head1 NIFFIOFileReadCLT

Read and set a NIFFIOFile's chunk length table.

     RIFFIOSuccess
     NIFFIOFileReadCLT(NIFFIOFile *pnf, RIFFIOChunk *pchunkCLT)


=head2 ENTRY

=over 4

=item *<*pchunkCLT>

is a chunk length table chunk that has been
returned by NIFFIOChunkDescend().

=item *<*pnf>

may be positioned anywhere

=back

=head2 EXIT

Leaves the NIFFIOFile positioned after the chunk length table chunk.

=head1 NIFFIOFileAdoptCLT

Assign and write a chunk length table to a NIFFIOFile.

     RIFFIOSuccess
     NIFFIOFileAdoptCLT(NIFFIOFile *pnf, NIFFIOChunkLengthTable *pclt)


=head2 ENTRY

The NIFFIOFile must be positioned at the start of data
of its CLT chunk.

=head2 EXIT

Leaves the file positioned at the end of the CLT chunk data
that it just wrote.

=head2 OBLIGATIONS

Upon return, the NIFFIOFile takes responsibility for
deleting the CLT you just gave it.
Don't free or delete <*pclt>; that will be done by either another
call to NIFFIOFileAdoptCLT() or NIFFIOFileDelete().

=head1 NIFFIOSeekChunkTags

Position a NIFFIOFile at the start of a given chunk's tags.

     RIFFIOSuccess
     NIFFIOSeekChunkTags(NIFFIOFile *pnf, RIFFIOChunk *pchunk)


This is done according to the chunk length table associated
with the NIFFIOFile.

It is an error if there is no associated CLT. Use NIFFIOFileGetCLT()
to find out.

=head2 RETURNS

=over 4

=item *RIFFIO_OK

on success

=item *RIFFIO_FAIL

if the lookup failed to find the chunks id in the CLT

=item *RIFFIO_FAIL

on a file seek error


=head1 NAME

stack - maintain a stack of chunks.

=head1 SYNOPSIS

=over 4

=item *

RIFFIOChunkStackNew()

=item *

RIFFIOChunkStackDelete()

=item *

RIFFIOChunkStackPush()

=item *

RIFFIOChunkStackPop()

=item *

RIFFIOChunkStackTop()

=item *

RIFFIOChunkStackIsEmpty()

=back

=head1 RIFFIOChunkStackNew

Return an empty RIFFIOChunkStack.

     RIFFIOChunkStack *
     RIFFIOChunkStackNew(void)


=head2 RETURN

NULL on failure

=head2 OBLIGATIONS

The newly created RIFFIOChunkStack must be freed with
RIFFIOChunkStackDelete().

=head1 RIFFIOChunkStackDelete

Free memory allocated to a RIFFIOChunkStack.

     void
     RIFFIOChunkStackDelete(RIFFIOChunkStack *pstack)


=head1 RIFFIOChunkStackIsEmpty

Return true if a RIFFIOChunkStack is empty.

     int
     RIFFIOChunkStackIsEmpty(RIFFIOChunkStack *pstack)


=head1 RIFFIOChunkStackTop

Peek at top of the stack without popping.

     RIFFIOChunk *
     RIFFIOChunkStackTop(RIFFIOChunkStack *pstack)


=head1 RIFFIOChunkStackPop

Pop the top item of the RIFFIOChunkStack.

     void
     RIFFIOChunkStackPop(RIFFIOChunkStack *pstack)


=head2 ENTRY

T <*pstack> must not be empty.

=head1 RIFFIOChunkStackPush

Push a chunk on the top of the stack

     RIFFIOSuccess
     RIFFIOChunkStackPush(RIFFIOChunkStack *pstack,
                          RIFFIOChunk *pchunk)


=head2 OBLIGATIONS

You must still keep track of the memory occupied by <*pchunk>.
The RIFFIOChunkStack will make its own copy of <*pchunk>.
